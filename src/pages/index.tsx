import { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex">
        <button
          className="btn-primary btn"
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? "Sign out" : "Sign in"}
        </button>

        <AuthShowcase />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const [roomId, setRoomId] = useState<string>();

  const { data: rooms } = api.room.getAll.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined, refetchInterval: 1000 }
  );

  const { data: messages, refetch } = api.message.getAll.useQuery(
    { roomId: roomId ?? "" }, // no input
    {
      enabled: sessionData?.user !== undefined && !!roomId,
      refetchInterval: 1000,
    }
  );

  const postMutation = api.message.post.useMutation({
    onSuccess: async () => {
      await refetch();
    },
  });

  return (
    <div className="flex">
      <div>
        {rooms?.map((room) => (
          <div key={room.id} onClick={() => setRoomId(room.id)}>
            {room.name}
          </div>
        ))}
      </div>
      {roomId && (
        <div>
          {messages?.map((message) => (
            <div key={message.id}>{message.text}</div>
          ))}
          <input
            type="text"
            placeholder="Message"
            className="input-primary input"
            onKeyDown={(e) => {
              if (e.key === "Enter") {
                postMutation.mutate({
                  roomId: roomId ?? "",
                  text: e.currentTarget.value,
                });
                e.currentTarget.value = "";
              }
            }}
          />
        </div>
      )}
    </div>
  );
};
